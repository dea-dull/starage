AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ellionis Backend (Signup + Verify + Resend + Reset Password)

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 10
    Environment:
      Variables:
        USER_POOL_ID: !Ref UserPoolId
        CLIENT_ID: !Ref ClientId
        FRONTEND_URL: !Ref FrontendUrl
        TOKEN_TABLE: !Ref TokenTableName
        RESET_TOKEN_TABLE: !Ref ResetTokensTable
        FROM_EMAIL: !Ref FromEmail
        API_URL: !Ref ApiUrl
        IDENTITY: !Ref DOMAIN

Resources:

# MagicTokensTable:
#   Type: AWS::DynamoDB::Table
#   Properties:
#     TableName: MagicTokens
#     AttributeDefinitions:
#       - AttributeName: token
#         AttributeType: S
#     KeySchema:
#       - AttributeName: token
#         KeyType: HASH
#     BillingMode: PAY_PER_REQUEST
#     TimeToLiveSpecification:
#       AttributeName: expiresAt
#       Enabled: true

  ResetTokensTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ResetTokens
      AttributeDefinitions:
        - AttributeName: token
          AttributeType: S
      KeySchema:
        - AttributeName: token
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: expiresAt
        Enabled: true

  # Signup Lambda
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: signup.handler
      Events:
        SignupApi:
          Type: HttpApi
          Properties:
            Path: /signup
            Method: post
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2
      
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TokenTableName}
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:SignUp
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource:
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${DOMAIN}
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@gmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@yahoo.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@hotmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@outlook.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:configuration-set/*

  # Verify Lambda
  VerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: verify.handler
      Events:
        VerifyApi:
          Type: HttpApi
          Properties:
            Path: /verify
            Method: get
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2

      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TokenTableName}
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminConfirmSignUp
                - cognito-idp:AdminUpdateUserAttributes
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}

  # Resend Verification Lambda
  ResendVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: resend-verification.handler
      Events:
        ResendApi:
          Type: HttpApi
          Properties:
            Path: /resend-verification
            Method: post
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:Scan
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TokenTableName}
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource:
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${DOMAIN}
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@gmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@yahoo.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@hotmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@outlook.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:configuration-set/*

  # Request Reset Password Lambda
  RequestResetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: request-reset.handler
      Events:
        RequestResetApi:
          Type: HttpApi
          Properties:
            Path: /request-reset
            Method: post
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt ResetTokensTable.Arn
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource:
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${DOMAIN}
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@gmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@yahoo.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@hotmail.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*@outlook.com
                - !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:configuration-set/*

  # Validate Reset Token Lambda
  ValidateResetTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: validate-reset-token.handler
      Events:
        ValidateResetApi:
          Type: HttpApi
          Properties:
            Path: /validate-reset-token
            Method: get
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !GetAtt ResetTokensTable.Arn

  # Confirm Reset Password Lambda
  ConfirmResetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: confirm-reset.handler
      Events:
        ConfirmResetApi:
          Type: HttpApi
          Properties:
            Path: /confirm-reset
            Method: post
            RouteSettings:
              ThrottlingBurstLimit: 5
              ThrottlingRateLimit: 2
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:DeleteItem
              Resource: !GetAtt ResetTokensTable.Arn
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminSetUserPassword
              Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}

  # HTTP API
  ServerlessHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - !Ref FrontendUrl
        AllowHeaders:
          - Content-Type
          - Origin 
          - Accept
        ExposeHeaders:
          - date
          - x-api-id
        MaxAge: 300
        AllowCredentials: true
      RouteSettings:
        "POST /signup":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2
        "POST /request-reset":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2
        "POST /confirm-reset":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2
        "POST /resend-verification":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2
        "GET /verify":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2
        "GET /validate-reset-token":
          ThrottlingBurstLimit: 5
          ThrottlingRateLimit: 2

Parameters:
  UserPoolId:
    Type: String
  ClientId:
    Type: String
  FrontendUrl:
    Type: String
  FromEmail:
    Type: String
  ApiUrl:
    Type: String
  DOMAIN:
    Type: String
  TokenTableName:
    Type: String
